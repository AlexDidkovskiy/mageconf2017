Index: app/code/Magento/MageConfLayout/view/base/templates/block_content.phtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/view/base/templates/block_content.phtml	(revision )
+++ app/code/Magento/MageConfLayout/view/base/templates/block_content.phtml	(revision )
@@ -0,0 +1,30 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+
+// @codingStandardsIgnoreFile
+/**
+ * @var \Magento\MageConfLayout\Block\LayoutOutput $this
+ * @var \Magento\MageConfLayout\Block\LayoutOutput $block
+ */
+?>
+<div style="margin: 20px">
+    <a href="javascript:void(0);" status="<?= $this->getData('status'); ?>" onclick="treeManager.toogle(this)">
+        <?= sprintf(
+            '%s %s',
+            $this->getData('attributesToShow') ? '' : $this->getData('symbol'),
+            $this->getData('name')) ?>
+    </a>
+    <div id="<?= $this->getData('name' )?>" class="animtated expanded" style="display:  <?= $this->getData('display') ?>">
+        <?= $this->getData('child'); ?>
+    </div>
+
+    <?php if ((bool) $this->getData('attributesToShow')): ?>
+        <div style="position: relative; margin: 20px">
+            <div><b>Template: </b><?= $this->getData('template'); ?></div>
+            <div><b>Block Class: </b><?= $this->getData('block_class'); ?></div>
+        </div>
+    <?php endif; ?>
+</div>
Index: app/code/Magento/MageConfLayout/registration.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/registration.php	(revision )
+++ app/code/Magento/MageConfLayout/registration.php	(revision )
@@ -0,0 +1,9 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+
+use \Magento\Framework\Component\ComponentRegistrar;
+
+ComponentRegistrar::register(ComponentRegistrar::MODULE, 'Magento_MageConfLayout', __DIR__);
Index: app/code/Magento/MageConfLayout/etc/module.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/etc/module.xml	(revision )
+++ app/code/Magento/MageConfLayout/etc/module.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0"?>
+<!--
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+-->
+<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
+    <module name="Magento_MageConfLayout" setup_version="2.0.0">
+    </module>
+</config>
Index: app/code/Magento/MageConfLayout/view/base/web/js/tree.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/view/base/web/js/tree.js	(revision )
+++ app/code/Magento/MageConfLayout/view/base/web/js/tree.js	(revision )
@@ -0,0 +1,67 @@
+require([
+    'underscore'
+], function (_) {
+    window.treeManager = {
+        toogle: function (element) {
+            if (element.getAttribute('status') === 'hide') {
+                this.showElement(element);
+            } else {
+                this.hideElement(element);
+            }
+        },
+
+        showElement: function (element) {
+            if (element.getAttribute('status') === 'hide') {
+                element.setAttribute('status', 'expand');
+                element.innerHTML = element.innerHTML.replace('[+]', '[-]');
+                element.nextElementSibling.style.display = 'block';
+            }
+        },
+
+        hideElement: function (element) {
+            if (element.getAttribute('status') === 'expand') {
+                element.setAttribute('status', 'hide');
+                element.innerHTML = element.innerHTML.replace('[-]', '[+]');
+                element.nextElementSibling.style.display = 'none';
+            }
+        },
+
+        navigate: function () {
+            var input = document.getElementsByName('layout_navigator'),
+                url = location.href.replace(/\#[\w\.\-\_]+/, ""),
+                el;
+
+            if (el = document.getElementById(input[0].value)) {
+                this.showElements(el);
+                location.href = url + "#" + input[0].value;
+                el.style['background-color'] = 'yellow';
+
+                setTimeout(function () {
+                    jQuery(el).animate({backgroundColor: "white"}, 'slow');
+                }, 1000);
+            } else {
+                alert("Cannot find block name" + input[0].value);
+            }
+        },
+
+        showElements: function (childEl) {
+            var parent = childEl.parentNode.parentNode;
+
+            this.showElement(childEl.previousElementSibling);
+
+            if (parent.className.indexOf('expanded') !== -1) {
+                this.showElements(parent);
+            }
+        },
+
+        showContent: function (element) {
+            if (element.getAttribute('status') !== 'hide') {
+                element.setAttribute('status', 'hide');
+                element.nextElementSibling.style.display = 'none';
+            } else {
+                element.setAttribute('status', 'expand');
+                element.nextElementSibling.style.display = 'block';
+            }
+        }
+    };
+});
\ No newline at end of file
Index: app/code/Magento/MageConfLayout/Model/Plugin/LayoutOutput.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/Model/Plugin/LayoutOutput.php	(revision )
+++ app/code/Magento/MageConfLayout/Model/Plugin/LayoutOutput.php	(revision )
@@ -0,0 +1,24 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+namespace Magento\MageConfLayout\Model\Plugin;
+
+use Magento\Framework\App\ObjectManager;
+use Magento\Framework\View\Layout;
+
+class LayoutOutput
+{
+    /**
+     * @param Layout $layout
+     * @param $output
+     * @return mixed
+     */
+    public function beforeGetOutput(Layout $layout)
+    {
+        /** @var \Magento\MageConfLayout\Block\LayoutOutput $block */
+        $block = ObjectManager::getInstance()->get(\Magento\MageConfLayout\Block\LayoutOutput::class);
+        $layout->addBlock($block, 'layout_output', 'root');
+    }
+}
Index: app/code/Magento/MageConfLayout/Block/LayoutOutput.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/Block/LayoutOutput.php	(revision )
+++ app/code/Magento/MageConfLayout/Block/LayoutOutput.php	(revision )
@@ -0,0 +1,96 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+
+// @codingStandardsIgnoreFile
+
+namespace Magento\MageConfLayout\Block;
+
+use Magento\Framework\View\Element\Template;
+use Magento\Framework\View\Layout;
+
+class LayoutOutput extends \Magento\Framework\View\Element\Template
+{
+    /**
+     * @var string
+     */
+    protected $_template = 'Magento_MageConfLayout::layout_output.phtml';
+
+    /**
+     * @param array $data
+     * @return string
+     */
+    public function generateBlockContent(array $data)
+    {
+        $block = $this->getLayout()->createBlock(\Magento\Framework\View\Element\Template::class);
+        $block->setData(
+            $data
+        );
+        $block->setTemplate('Magento_MageConfLayout::block_content.phtml');
+        return $block->toHtml();
+    }
+
+    /**
+     * @param array $result
+     * @param string $output
+     * @return string
+     */
+    public function renderTree($parentItem)
+    {
+        $status = $this->getRequest()->getParam('expand') ? 'expand': 'hide';
+        $display = $this->getRequest()->getParam('expand') ? 'block': 'none';
+        $symbol =$this->getRequest()->getParam('expand') ? '[-]': '[+]';
+        $output = '';
+
+        foreach ($parentItem['children'] as $name => $item) {
+            if ($name === $this->getNameInLayout()) {
+                continue;
+            }
+
+            $output .= $this->generateBlockContent([
+                'symbol' => $symbol,
+                'status' => $status,
+                'display' => $display,
+                'name' => $name,
+                'attributesToShow' => isset($item['template']),
+                'child' => $this->renderTree($item),
+                'template' => isset($item['template']) ? $item['template'] : '',
+                'blockClass' => isset($item['blockClass']) ? $item['blockClass'] : ''
+            ]);
+        }
+        return $output;
+    }
+
+    public function isEnabled()
+    {
+        return $this->getRequest()->getParam('render_layout_tree');
+    }
+
+    /**
+     * @param string $name
+     * @param array $names
+     * @return array
+     */
+    public function showAllNames($name = 'root', array $names = [])
+    {
+        $layout = $this->getLayout();
+        $childNames = [];
+        foreach ($layout->getChildNames($name) as $childName) {
+            if ($layout->isBlock($childName)) {
+                /** @var Template $childBlock */
+                $childBlock = $layout->getBlock($childName);
+                $childNames[$childName] = [
+                    'children' => $this->showAllNames($childName, $names),
+                    'template' => $childBlock->getTemplate(),
+                    'blockClass' => get_class($childBlock)
+                ];
+            } else {
+                $childNames[$childName]['children'] = $this->showAllNames($childName, $names);
+            }
+        }
+
+        return $childNames;
+    }
+}
Index: app/code/Magento/MageConfLayout/view/base/templates/layout_output.phtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/view/base/templates/layout_output.phtml	(revision )
+++ app/code/Magento/MageConfLayout/view/base/templates/layout_output.phtml	(revision )
@@ -0,0 +1,30 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+
+// @codingStandardsIgnoreFile
+/**
+ * @var \Magento\MageConfLayout\Block\LayoutOutput $this
+ * @var \Magento\MageConfLayout\Block\LayoutOutput $block
+ */
+?>
+<?php if ($block->isEnabled()): ?>
+    <form onsubmit="treeManager.navigate(); return false;">
+        <label for="layout_navigator">Block name</label>
+        <input name="layout_navigator"/>
+        <button>Submit</button>
+    </form>
+
+    <div id="layout_root"><?= $block->renderTree(['children' => $this->showAllNames()]); ?></div>
+
+<?php endif; ?>
+<script type="text/x-magento-init">
+        {
+            "*": {
+                "Magento_MageConfLayout/js/tree": {}
+                }
+        }
+
+</script>
\ No newline at end of file
Index: app/code/Magento/MageConfLayout/etc/di.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConfLayout/etc/di.xml	(revision )
+++ app/code/Magento/MageConfLayout/etc/di.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+        <!--
+        /**
+         * Copyright © Magento, Inc. All rights reserved.
+         * See COPYING.txt for license details.
+         */
+        -->
+<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
+    <type name="Magento\Framework\View\Layout">
+        <plugin name="layout_output" type="\Magento\MageConfLayout\Model\Plugin\LayoutOutput" />
+    </type>
+</config>
