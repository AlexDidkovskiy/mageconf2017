Index: app/code/Magento/MageConf/etc/adminhtml/routes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConf/etc/adminhtml/routes.xml	(revision )
+++ app/code/Magento/MageConf/etc/adminhtml/routes.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0"?>
+<!--
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+-->
+<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
+    <router id="default">
+        <route id="mageconf" frontName="mageconf">
+            <module name="Magento_MageConf"/>
+        </route>
+    </router>
+</config>
Index: app/code/Magento/MageConf/Controller/Index/Index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/code/Magento/MageConf/Controller/Index/Index.php	(revision )
+++ app/code/Magento/MageConf/Controller/Index/Index.php	(revision )
@@ -0,0 +1,48 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+namespace Magento\MageConf\Controller\Index;
+
+use Magento\Framework\App\Action\Action;
+use Magento\Framework\App\Action\Context;
+use Magento\Framework\View\Result\Page;
+use Magento\Framework\View\Result\PageFactory;
+
+/**
+ * Processes request to robots.txt file and returns robots.txt content as result
+ */
+class Index extends Action
+{
+    /**
+     * @var PageFactory
+     */
+    private $resultPageFactory;
+
+    /**
+     * @param Context $context
+     * @param PageFactory $resultPageFactory
+     */
+    public function __construct(
+        Context $context,
+        PageFactory $resultPageFactory
+    ) {
+        $this->resultPageFactory = $resultPageFactory;
+
+        parent::__construct($context);
+    }
+
+    /**
+     * Generates robots.txt data and returns it as result
+     *
+     * @return Page
+     */
+    public function execute()
+    {
+        /** @var Page $resultPage */
+        $resultPage = $this->resultPageFactory->create(true);
+        //Should be just empty page
+        return $resultPage;
+    }
+}
